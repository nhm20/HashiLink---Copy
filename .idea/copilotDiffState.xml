<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/hashilink/ui/buyer/ChatHistoryFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/hashilink/ui/buyer/ChatHistoryFragment.kt" />
              <option name="originalContent" value="package com.example.hashilink.ui.buyer&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.TextView&#10;import androidx.fragment.app.Fragment&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.hashilink.R&#10;import com.google.firebase.auth.FirebaseAuth&#10;import com.google.firebase.database.*&#10;&#10;class ChatHistoryFragment : Fragment() {&#10;&#10;    private lateinit var recyclerView: RecyclerView&#10;    private lateinit var adapter: ChatHistoryAdapter&#10;    private val chatList = mutableListOf&lt;String&gt;()&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        return inflater.inflate(R.layout.fragment_chat_history, container, false)&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;&#10;        recyclerView = view.findViewById(R.id.rvChatHistory)&#10;        recyclerView.layoutManager = LinearLayoutManager(requireContext())&#10;        adapter = ChatHistoryAdapter(chatList) { sellerId -&gt;&#10;            // Open chat with seller&#10;            val chatFragment = ChatFragment.newInstance(sellerId)&#10;            (parentFragment as? BuyerHomeFragment)?.loadFragment(chatFragment)&#10;        }&#10;        recyclerView.adapter = adapter&#10;&#10;        loadChatHistory()&#10;    }&#10;&#10;    private fun loadChatHistory() {&#10;        val currentUser = FirebaseAuth.getInstance().currentUser ?: return&#10;        val buyerId = currentUser.uid&#10;        val chatsRef = FirebaseDatabase.getInstance().getReference(&quot;chats&quot;).child(buyerId)&#10;&#10;        chatsRef.addValueEventListener(object : ValueEventListener {&#10;            override fun onDataChange(snapshot: DataSnapshot) {&#10;                chatList.clear()&#10;                for (child in snapshot.children) {&#10;                    chatList.add(child.key!!) // sellerId&#10;                }&#10;                adapter.notifyDataSetChanged()&#10;            }&#10;&#10;            override fun onCancelled(error: DatabaseError) {&#10;                // Handle error&#10;            }&#10;        })&#10;    }&#10;&#10;    inner class ChatHistoryAdapter(&#10;        private val chats: List&lt;String&gt;,&#10;        private val onItemClick: (String) -&gt; Unit&#10;    ) : RecyclerView.Adapter&lt;ChatHistoryAdapter.ViewHolder&gt;() {&#10;&#10;        inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;            val tvSellerId: TextView = itemView.findViewById(R.id.tvSellerId)&#10;        }&#10;&#10;        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {&#10;            val view = LayoutInflater.from(parent.context).inflate(R.layout.item_chat_history, parent, false)&#10;            return ViewHolder(view)&#10;        }&#10;&#10;        override fun onBindViewHolder(holder: ViewHolder, position: Int) {&#10;            val sellerId = chats[position]&#10;            holder.tvSellerId.text = &quot;Chat with Seller: $sellerId&quot;&#10;            holder.itemView.setOnClickListener { onItemClick(sellerId) }&#10;        }&#10;&#10;        override fun getItemCount() = chats.size&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.hashilink.ui.buyer&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.TextView&#10;import androidx.fragment.app.Fragment&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.hashilink.R&#10;import com.google.firebase.auth.FirebaseAuth&#10;import com.google.firebase.database.*&#10;&#10;class ChatHistoryFragment : Fragment() {&#10;&#10;    private lateinit var recyclerView: RecyclerView&#10;    private lateinit var adapter: ChatHistoryAdapter&#10;    private val chatList = mutableListOf&lt;String&gt;()&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater, container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View {&#10;        return inflater.inflate(R.layout.fragment_chat_history, container, false)&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;&#10;        recyclerView = view.findViewById(R.id.rvChatHistory)&#10;        recyclerView.layoutManager = LinearLayoutManager(requireContext())&#10;        adapter = ChatHistoryAdapter(chatList) { sellerId -&gt;&#10;            // Open chat with seller&#10;            val chatFragment = ChatFragment.newInstance(sellerId)&#10;            (parentFragment as? BuyerHomeFragment)?.loadFragment(chatFragment)&#10;        }&#10;        recyclerView.adapter = adapter&#10;&#10;        loadChatHistory()&#10;    }&#10;&#10;    private fun loadChatHistory() {&#10;        val currentUser = FirebaseAuth.getInstance().currentUser ?: return&#10;        val buyerId = currentUser.uid&#10;        val chatsRef = FirebaseDatabase.getInstance().getReference(&quot;chats&quot;).child(buyerId)&#10;&#10;        chatsRef.addValueEventListener(object : ValueEventListener {&#10;            override fun onDataChange(snapshot: DataSnapshot) {&#10;                chatList.clear()&#10;                for (child in snapshot.children) {&#10;                    chatList.add(child.key!!) // sellerId&#10;                }&#10;                adapter.notifyDataSetChanged()&#10;            }&#10;&#10;            override fun onCancelled(error: DatabaseError) {&#10;                // Handle error&#10;            }&#10;        })&#10;    }&#10;&#10;    inner class ChatHistoryAdapter(&#10;        private val chats: List&lt;String&gt;,&#10;        private val onItemClick: (String) -&gt; Unit&#10;    ) : RecyclerView.Adapter&lt;ChatHistoryAdapter.ViewHolder&gt;() {&#10;&#10;        inner class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;            val tvSellerId: TextView = itemView.findViewById(R.id.tvSellerId)&#10;        }&#10;&#10;        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {&#10;            val view = LayoutInflater.from(parent.context).inflate(R.layout.item_chat_history, parent, false)&#10;            return ViewHolder(view)&#10;        }&#10;&#10;        override fun onBindViewHolder(holder: ViewHolder, position: Int) {&#10;            val sellerId = chats[position]&#10;            holder.tvSellerId.text = getString(R.string.chat_with_seller, sellerId)&#10;            holder.itemView.setOnClickListener { onItemClick(sellerId) }&#10;        }&#10;&#10;        override fun getItemCount() = chats.size&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/message_input_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/message_input_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@android:color/white&quot; /&gt;&#10;    &lt;corners android:radius=&quot;18dp&quot; /&gt;&#10;    &lt;stroke android:width=&quot;1dp&quot; android:color=&quot;#CCCCCC&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/message_received_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/message_received_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;@android:color/white&quot; /&gt;&#10;    &lt;corners android:radius=&quot;12dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/message_sent_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/message_sent_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#007AFF&quot; /&gt;&#10;    &lt;corners android:radius=&quot;12dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/send_button_bg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/send_button_bg.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#25D366&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/b_activity_register.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/b_activity_register.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etName&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Name&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etEmail&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Email&quot;&#10;        android:inputType=&quot;textEmailAddress&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etPassword&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Password&quot;&#10;        android:inputType=&quot;textPassword&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rgRole&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&gt;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rbBuyer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Buyer&quot; /&gt;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rbFarmer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Farmer&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnRegister&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Register&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etName&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Name&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etEmail&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Email&quot;&#10;        android:inputType=&quot;textEmailAddress&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etPassword&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Password&quot;&#10;        android:inputType=&quot;textPassword&quot; /&gt;&#10;&#10;    &lt;EditText&#10;        android:id=&quot;@+id/etMobile&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:hint=&quot;Mobile&quot;&#10;        android:inputType=&quot;phone&quot; /&gt;&#10;&#10;    &lt;RadioGroup&#10;        android:id=&quot;@+id/rgRole&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&gt;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rbBuyer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Buyer&quot; /&gt;&#10;        &lt;RadioButton&#10;            android:id=&quot;@+id/rbFarmer&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Farmer&quot; /&gt;&#10;    &lt;/RadioGroup&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnRegister&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Register&quot; /&gt;&#10;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;HashiLink&lt;/string&gt;&#10;    &lt;!-- TODO: Remove or change this placeholder text --&gt;&#10;    &lt;string name=&quot;hello_blank_fragment&quot;&gt;Hello blank fragment&lt;/string&gt;&#10;    &lt;string name=&quot;product_not_found&quot;&gt;Product not found&lt;/string&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;HashiLink&lt;/string&gt;&#10;    &lt;!-- TODO: Remove or change this placeholder text --&gt;&#10;    &lt;string name=&quot;hello_blank_fragment&quot;&gt;Hello blank fragment&lt;/string&gt;&#10;    &lt;string name=&quot;product_not_found&quot;&gt;Product not found&lt;/string&gt;&#10;    &lt;string name=&quot;product_price&quot;&gt;₹%1$.2f&lt;/string&gt;&#10;    &lt;string name=&quot;product_quantity&quot;&gt;Available Quantity: %1$d&lt;/string&gt;&#10;    &lt;string name=&quot;seller_id&quot;&gt;Seller ID: %1$s&lt;/string&gt;&#10;    &lt;string name=&quot;chat_with_seller&quot;&gt;Chat with Seller: %1$s&lt;/string&gt;&#10;    &lt;string name=&quot;message_format&quot;&gt;%1$s: %2$s&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>